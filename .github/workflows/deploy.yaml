name: Deploy pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Build and push Docker image to ECR
        run: |
          # Log in to Amazon ECR
          aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 266748940789.dkr.ecr.eu-central-1.amazonaws.com

          # Build and tag Docker image
          docker build -t version-backend-production .
          docker tag version-backend-production:latest 266748940789.dkr.ecr.eu-central-1.amazonaws.com/version-backend-production:latest

          # Push Docker image to ECR
          docker push 266748940789.dkr.ecr.eu-central-1.amazonaws.com/version-backend-production:latest

      - name: Update ECS Task Definition
        if: success() # Only run if the previous steps were successful
        run: |
          # Create a new task definition with the updated Docker image version
          aws ecs register-task-definition --family version-backend-production --container-definitions "$(cat ecs/production-task-definition.json)"

      - name: Update ECS Service
        if: success() # Only run if the previous steps were successful
        run: |
          # Update ECS service to use the new task definition
          aws ecs update-service --cluster version-backend-production --service version-backend-production --task-definition version-backend-production:latest
